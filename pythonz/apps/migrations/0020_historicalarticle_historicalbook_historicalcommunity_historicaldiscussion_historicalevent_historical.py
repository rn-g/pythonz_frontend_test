# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('apps', '0019_auto_20141114_1603'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalArticle',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', auto_created=True, blank=True, db_index=True)),
                ('text', models.TextField(verbose_name='Текст')),
                ('text_src', models.TextField(verbose_name='Исходный текст')),
                ('title', models.CharField(verbose_name='Название', db_index=True, max_length=255)),
                ('description', models.TextField(verbose_name='Описание')),
                ('submitter_id', models.IntegerField(null=True, verbose_name='Добавил', db_index=True, blank=True)),
                ('cover', models.TextField(blank=True, null=True, verbose_name='Обложка', max_length=255)),
                ('year', models.CharField(blank=True, null=True, verbose_name='Год', max_length=10)),
                ('time_created', models.DateTimeField(verbose_name='Дата создания', blank=True, editable=False)),
                ('time_published', models.DateTimeField(null=True, verbose_name='Дата публикации', editable=False)),
                ('time_modified', models.DateTimeField(null=True, verbose_name='Дата редактирования', editable=False)),
                ('status', models.PositiveIntegerField(default=1, verbose_name='Статус', choices=[(1, 'Черновик'), (2, 'Опубликован'), (3, 'Удален')])),
                ('supporters_num', models.PositiveIntegerField(default=0, verbose_name='Поддержка')),
                ('last_editor_id', models.IntegerField(null=True, help_text='Пользователь, последним отредактировавший объект.', verbose_name='Редактор', db_index=True, blank=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, to=settings.AUTH_USER_MODEL, on_delete=models.CASCADE)),
            ],
            options={
                'verbose_name': 'historical Статья',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalBook',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', auto_created=True, blank=True, db_index=True)),
                ('author', models.CharField(verbose_name='Автор', help_text='Предпочтительно имя и фамилия. Можно указать несколько, разделяя запятыми.<br><b>[u:<ид>:<имя>]</b> формирует ссылку на профиль пользователя pythonz. Например: [u:1:идле].', max_length=255)),
                ('translator', models.CharField(blank=True, null=True, help_text='Укажите переводчиков, если материал переведён на русский с другого языка. Если переводчик неизвестен, можно указать главного редактора.<br><b>[u:<ид>:<имя>]</b> формирует ссылку на профиль пользователя pythonz. Например: [u:1:идле].', verbose_name='Перевод', max_length=255)),
                ('title', models.CharField(verbose_name='Название', db_index=True, max_length=255)),
                ('description', models.TextField(verbose_name='Описание')),
                ('submitter_id', models.IntegerField(null=True, verbose_name='Добавил', db_index=True, blank=True)),
                ('cover', models.TextField(blank=True, null=True, verbose_name='Обложка', max_length=255)),
                ('year', models.CharField(blank=True, null=True, verbose_name='Год', max_length=10)),
                ('time_created', models.DateTimeField(verbose_name='Дата создания', blank=True, editable=False)),
                ('time_published', models.DateTimeField(null=True, verbose_name='Дата публикации', editable=False)),
                ('time_modified', models.DateTimeField(null=True, verbose_name='Дата редактирования', editable=False)),
                ('status', models.PositiveIntegerField(default=1, verbose_name='Статус', choices=[(1, 'Черновик'), (2, 'Опубликован'), (3, 'Удален')])),
                ('supporters_num', models.PositiveIntegerField(default=0, verbose_name='Поддержка')),
                ('last_editor_id', models.IntegerField(null=True, help_text='Пользователь, последним отредактировавший объект.', verbose_name='Редактор', db_index=True, blank=True)),
                ('isbn', models.CharField(blank=True, null=True, verbose_name='Код ISBN', db_index=True, max_length=20)),
                ('isbn_ebook', models.CharField(blank=True, null=True, verbose_name='Код ISBN эл. книги', db_index=True, max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, to=settings.AUTH_USER_MODEL, on_delete=models.CASCADE)),
            ],
            options={
                'verbose_name': 'historical Книга',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalCommunity',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', auto_created=True, blank=True, db_index=True)),
                ('text', models.TextField(verbose_name='Текст')),
                ('text_src', models.TextField(verbose_name='Исходный текст')),
                ('title', models.CharField(verbose_name='Название', db_index=True, max_length=255)),
                ('description', models.TextField(verbose_name='Описание')),
                ('submitter_id', models.IntegerField(null=True, verbose_name='Добавил', db_index=True, blank=True)),
                ('cover', models.TextField(blank=True, null=True, verbose_name='Обложка', max_length=255)),
                ('year', models.CharField(blank=True, null=True, verbose_name='Год', max_length=10)),
                ('time_created', models.DateTimeField(verbose_name='Дата создания', blank=True, editable=False)),
                ('time_published', models.DateTimeField(null=True, verbose_name='Дата публикации', editable=False)),
                ('time_modified', models.DateTimeField(null=True, verbose_name='Дата редактирования', editable=False)),
                ('status', models.PositiveIntegerField(default=1, verbose_name='Статус', choices=[(1, 'Черновик'), (2, 'Опубликован'), (3, 'Удален')])),
                ('supporters_num', models.PositiveIntegerField(default=0, verbose_name='Поддержка')),
                ('last_editor_id', models.IntegerField(null=True, help_text='Пользователь, последним отредактировавший объект.', verbose_name='Редактор', db_index=True, blank=True)),
                ('place_id', models.IntegerField(null=True, help_text='Для географически локализованных сообществ можно указать место (страна, город, село).<br>Например: «Россия, Новосибирск» или «Новосибирск», но не «Нск».', verbose_name='Место', db_index=True, blank=True)),
                ('contacts', models.CharField(blank=True, null=True, help_text='Контактные лица через запятую, представляющие сообщество, координаторы, основатели.<br><b>[u:<ид>:<имя>]</b> формирует ссылку на профиль пользователя pythonz. Например: [u:1:идле].', verbose_name='Контактные лица', max_length=255)),
                ('url', models.URLField(blank=True, null=True, verbose_name='Страница в сети')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, to=settings.AUTH_USER_MODEL, on_delete=models.CASCADE)),
            ],
            options={
                'verbose_name': 'historical Сообщество',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalDiscussion',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', auto_created=True, blank=True, db_index=True)),
                ('text', models.TextField(verbose_name='Текст')),
                ('text_src', models.TextField(verbose_name='Исходный текст')),
                ('title', models.CharField(verbose_name='Название', db_index=True, max_length=255)),
                ('description', models.TextField(verbose_name='Описание')),
                ('submitter_id', models.IntegerField(null=True, verbose_name='Добавил', db_index=True, blank=True)),
                ('cover', models.TextField(blank=True, null=True, verbose_name='Обложка', max_length=255)),
                ('year', models.CharField(blank=True, null=True, verbose_name='Год', max_length=10)),
                ('time_created', models.DateTimeField(verbose_name='Дата создания', blank=True, editable=False)),
                ('time_published', models.DateTimeField(null=True, verbose_name='Дата публикации', editable=False)),
                ('time_modified', models.DateTimeField(null=True, verbose_name='Дата редактирования', editable=False)),
                ('status', models.PositiveIntegerField(default=1, verbose_name='Статус', choices=[(1, 'Черновик'), (2, 'Опубликован'), (3, 'Удален')])),
                ('supporters_num', models.PositiveIntegerField(default=0, verbose_name='Поддержка')),
                ('last_editor_id', models.IntegerField(null=True, help_text='Пользователь, последним отредактировавший объект.', verbose_name='Редактор', db_index=True, blank=True)),
                ('object_id', models.PositiveIntegerField(null=True, verbose_name='ID объекта', db_index=True, blank=True)),
                ('content_type_id', models.IntegerField(null=True, verbose_name='Тип содержимого', db_index=True, blank=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, to=settings.AUTH_USER_MODEL, on_delete=models.CASCADE)),
            ],
            options={
                'verbose_name': 'historical Обсуждение',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalEvent',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', auto_created=True, blank=True, db_index=True)),
                ('text', models.TextField(verbose_name='Текст')),
                ('text_src', models.TextField(verbose_name='Исходный текст')),
                ('title', models.CharField(verbose_name='Название', db_index=True, max_length=255)),
                ('description', models.TextField(verbose_name='Описание')),
                ('submitter_id', models.IntegerField(null=True, verbose_name='Добавил', db_index=True, blank=True)),
                ('cover', models.TextField(blank=True, null=True, verbose_name='Обложка', max_length=255)),
                ('year', models.CharField(blank=True, null=True, verbose_name='Год', max_length=10)),
                ('time_created', models.DateTimeField(verbose_name='Дата создания', blank=True, editable=False)),
                ('time_published', models.DateTimeField(null=True, verbose_name='Дата публикации', editable=False)),
                ('time_modified', models.DateTimeField(null=True, verbose_name='Дата редактирования', editable=False)),
                ('status', models.PositiveIntegerField(default=1, verbose_name='Статус', choices=[(1, 'Черновик'), (2, 'Опубликован'), (3, 'Удален')])),
                ('supporters_num', models.PositiveIntegerField(default=0, verbose_name='Поддержка')),
                ('last_editor_id', models.IntegerField(null=True, help_text='Пользователь, последним отредактировавший объект.', verbose_name='Редактор', db_index=True, blank=True)),
                ('url', models.URLField(blank=True, null=True, verbose_name='Страница в сети')),
                ('contacts', models.CharField(blank=True, null=True, help_text='Контактные лица через запятую, координирующие/устраивающие событие.<br><b>[u:<ид>:<имя>]</b> формирует ссылку на профиль пользователя pythonz. Например: [u:1:идле].', verbose_name='Контактные лица', max_length=255)),
                ('place_id', models.IntegerField(null=True, help_text='Укажите место проведения мероприятия.<br><b>Конкретный адрес следует указывать в описании.</b><br>Например: «Россия, Новосибирск» или «Новосибирск», но не «Нск».', verbose_name='Место', db_index=True, blank=True)),
                ('specialization', models.PositiveIntegerField(default=1, verbose_name='Специализация', choices=[(1, 'Только Python'), (2, 'Есть секция/отделение про Python'), (3, 'Есть упоминания про Python')])),
                ('type', models.PositiveIntegerField(default=1, verbose_name='Тип', choices=[(1, 'Встреча'), (3, 'Лекция'), (2, 'Конференция'), (4, 'Спринт')])),
                ('time_start', models.DateTimeField(null=True, verbose_name='Начало', blank=True)),
                ('time_finish', models.DateTimeField(null=True, help_text='Дату завершения можно и не указывать.', verbose_name='Завершение', blank=True)),
                ('fee', models.BooleanField(default=False, verbose_name='Участие платное', db_index=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, to=settings.AUTH_USER_MODEL, on_delete=models.CASCADE)),
            ],
            options={
                'verbose_name': 'historical Событие',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalPlace',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', auto_created=True, blank=True, db_index=True)),
                ('time_created', models.DateTimeField(verbose_name='Дата создания', blank=True, editable=False)),
                ('time_published', models.DateTimeField(null=True, verbose_name='Дата публикации', editable=False)),
                ('time_modified', models.DateTimeField(null=True, verbose_name='Дата редактирования', editable=False)),
                ('status', models.PositiveIntegerField(default=1, verbose_name='Статус', choices=[(1, 'Черновик'), (2, 'Опубликован'), (3, 'Удален')])),
                ('supporters_num', models.PositiveIntegerField(default=0, verbose_name='Поддержка')),
                ('last_editor_id', models.IntegerField(null=True, help_text='Пользователь, последним отредактировавший объект.', verbose_name='Редактор', db_index=True, blank=True)),
                ('title', models.CharField(verbose_name='Название', max_length=255)),
                ('description', models.TextField(default='', verbose_name='Описание', blank=True)),
                ('geo_title', models.TextField(null=True, verbose_name='Полное название', db_index=True, blank=True)),
                ('geo_bounds', models.CharField(blank=True, null=True, verbose_name='Пределы', max_length=255)),
                ('geo_pos', models.CharField(blank=True, null=True, verbose_name='Координаты', max_length=255)),
                ('geo_type', models.CharField(null=True, blank=True, max_length=25, verbose_name='Тип', db_index=True, choices=[('country', 'Страна'), ('locality', 'Местность'), ('house', 'Здание')])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, to=settings.AUTH_USER_MODEL, on_delete=models.CASCADE)),
            ],
            options={
                'verbose_name': 'historical Место',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HistoricalVideo',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', auto_created=True, blank=True, db_index=True)),
                ('author', models.CharField(verbose_name='Автор', help_text='Предпочтительно имя и фамилия. Можно указать несколько, разделяя запятыми.<br><b>[u:<ид>:<имя>]</b> формирует ссылку на профиль пользователя pythonz. Например: [u:1:идле].', max_length=255)),
                ('translator', models.CharField(blank=True, null=True, help_text='Укажите переводчиков, если материал переведён на русский с другого языка. Если переводчик неизвестен, можно указать главного редактора.<br><b>[u:<ид>:<имя>]</b> формирует ссылку на профиль пользователя pythonz. Например: [u:1:идле].', verbose_name='Перевод', max_length=255)),
                ('title', models.CharField(verbose_name='Название', db_index=True, max_length=255)),
                ('description', models.TextField(verbose_name='Описание')),
                ('submitter_id', models.IntegerField(null=True, verbose_name='Добавил', db_index=True, blank=True)),
                ('cover', models.TextField(blank=True, null=True, verbose_name='Обложка', max_length=255)),
                ('year', models.CharField(blank=True, null=True, verbose_name='Год', max_length=10)),
                ('time_created', models.DateTimeField(verbose_name='Дата создания', blank=True, editable=False)),
                ('time_published', models.DateTimeField(null=True, verbose_name='Дата публикации', editable=False)),
                ('time_modified', models.DateTimeField(null=True, verbose_name='Дата редактирования', editable=False)),
                ('status', models.PositiveIntegerField(default=1, verbose_name='Статус', choices=[(1, 'Черновик'), (2, 'Опубликован'), (3, 'Удален')])),
                ('supporters_num', models.PositiveIntegerField(default=0, verbose_name='Поддержка')),
                ('last_editor_id', models.IntegerField(null=True, help_text='Пользователь, последним отредактировавший объект.', verbose_name='Редактор', db_index=True, blank=True)),
                ('code', models.TextField(verbose_name='Код')),
                ('url', models.URLField(verbose_name='URL')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, to=settings.AUTH_USER_MODEL, on_delete=models.CASCADE)),
            ],
            options={
                'verbose_name': 'historical Видео',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(models.Model,),
        ),
    ]
